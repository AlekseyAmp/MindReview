"""change column type in logs

Revision ID: bb7abe812ad1
Revises: 1aa63a5afded
Create Date: 2024-04-27 19:24:10.158489+00:00

"""
from typing import Sequence, Union

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bb7abe812ad1'
down_revision: Union[str, None] = '1aa63a5afded'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    log_level_enum = postgresql.ENUM(
        'complete',
        'info',
        'warning',
        'error',
        'critical',
        name='log_level_enum'
    )
    log_level_enum.create(op.get_bind())

    op.alter_column(
        'logs',
        'level',
        existing_type=sa.VARCHAR(),
        type_=postgresql.ENUM(
            'complete',
            'info',
            'warning',
            'error',
            'critical',
            name='log_level_enum'
        ),
        existing_comment='Уровень важности лога',
        existing_nullable=False,
        schema='logs',
        # Добавляем USING для явного преобразования данных
        postgresql_using="level::text::log_level_enum"
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column(
        'logs',
        'level',
        existing_type=postgresql.ENUM(
            'complete',
            'info',
            'warning',
            'error',
            'critical',
            name='log_level_enum'
        ),
        type_=sa.VARCHAR(),
        existing_comment='Уровень важности лога',
        existing_nullable=False,
        schema='logs')
    # ### end Alembic commands ###
